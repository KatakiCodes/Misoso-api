# FASE DE BUILD
#NESTA FASE FAZ-SE O BUILD E A RESTAURAÇÃO DAS DEPENDÊNCIAS

FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
#REFERENCIA A IMAGEM BASE CUJO O DOTNET 9 SDK RODA

WORKDIR /app
#DEFINE O DIRETÓRIO DE TRABALHO ONDE OS ARQUIVOS SERÃO COPIADOS E EMPACOTADOS

COPY ["Misoso.Api.csproj", "./"]
#COPIA O ARQUIVO DE PROJETO .CSPROJ PARA O DIRETÓRIO DE TRABALHO
#NOTA: COPIAR PRIMEIRO O ARQUIVO CSPROJ PRINCIPAL PARA E RESTORE AJUDA A APROVEITAR O CACHE DO DOCKER

RUN dotnet restore "Misoso.Api.csproj"
#RESTAURA AS DEPENDÊNCIAS E AS FERRAMENTAS DO PROJ

COPY . .
RUN dotnet build "Misoso.Api.csproj" -c Release -o /app/build
#COMPILA O PROJETO EM MODO RELEASE E COLOCA OS ARQUIVOS COMPILADOS NO DIRETÓRIO /APP/

#FASE DE PUBLISH
#NESTA FASE FAZ-SE O PUBLISH DA APLICAÇÃO
FROM build AS Publish
RUN dotnet publish "Misoso.Api.csproj" -c Release -o /app/publish

#FASE DE RUNTIME
#NESTA FASE DEFINE-SE A IMAGEM DE RUNTIME E COPIA-SE OS ARQUIVOS PUBLICADOS PARA A IMAGEM DE RUNTIME
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS final
#REFERENCIA A IMAGEM BASE CUJO O DOTNET 9 RUNTIME RODA
WORKDIR /app
#DEFINE O DIRETÓRIO DE TRABALHO ONDE OS ARQUIVOS
COPY --from=Publish /app/publish .
#COPIA OS ARQUIVOS PUBLICADOS DA FASE DE PUBLISH PARA O DIRETÓRIO DE TRABALHO DA IMAGEM FINAL
ENTRYPOINT ["dotnet", "Misoso.Api.dll"]
#DEFINE O PONTO DE ENTRADA DA APLICAÇÃO, OU SEJA, O COMANDO QUE SERÁ EXECUTADO QUANDO O CONTÊINER FOR INICIADO
#NESTE CASO, O COMANDO INICIA A APLICAÇÃO .DLL USANDO O RUNTIME DO DOTNET